apply plugin: 'java'

repositories {
	mavenCentral()
}

configurations {
	antlr4
}

dependencies {
	antlr4 'org.antlr:antlr4:4.0'
	compile 'org.antlr:antlr4-runtime:4.0'
}

task generateGrammarSources(type: JavaExec) {
	ext.grammarFiles = fileTree('src/main/antlr4').include('**/*.g4')
	ext.outputPath = "${project.buildDir}/generated-src/antlr4/main"
	inputs.files grammarFiles
	outputs.dir outputPath
	classpath configurations.antlr4
	main = 'org.antlr.v4.Tool'
	args('-o')
	args("${project.buildDir}/generated-src/antlr4/main")
	args('-visitor')
	args(grammarFiles.files.join(' '))
}

task grun(type: JavaExec, dependsOn: compileJava) {
	classpath configurations.antlr4
	classpath sourceSets.main.output
	main = 'org.antlr.v4.runtime.misc.TestRig'
	args(project.grunGrammar)
	args(project.grunRule)
	if (project.hasProperty('grunArgs')) {
		args(project.grunArgs)
	}
	args(project.grunFile)
	doFirst {
		project.logger.info("Running grun with grammar ${project.grunGrammar} and rule ${project.grunRule} with args ${project.hasProperty('grunArgs') ? project.grunArgs : ""} on input file ${project.grunFile}")
	}
}

sourceSets.main.java.srcDir generateGrammarSources.outputPath
compileJava.dependsOn generateGrammarSources
